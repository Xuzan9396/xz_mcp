name: Release XZ MCP

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            name: xz_mcp_darwin_amd64
          - goarch: arm64
            name: xz_mcp_darwin_arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: darwin
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          go mod tidy
          go build -ldflags "-s -w" -o ${{ matrix.name }} main.go

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            name: xz_mcp_linux_amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libc6-dev

      - name: Build
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          go mod tidy
          go build -ldflags "-s -w" -o ${{ matrix.name }} main.go

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  create-release:
    name: Create Release
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure
        run: ls -R ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*/*
          body: |
            ## XZ MCP - 统一数据库 MCP 服务器

            ### 🚀 快速安装

            **一键安装脚本（推荐）**:
            ```bash
            curl -fsSL https://raw.githubusercontent.com/Xuzan9396/xz_mcp/main/install.sh | bash
            ```

            **手动下载**:

            **macOS (Apple Silicon)**:
            ```bash
            curl -L https://github.com/Xuzan9396/xz_mcp/releases/latest/download/xz_mcp_darwin_arm64 -o xz_mcp
            chmod +x xz_mcp
            mv xz_mcp ~/go/bin/
            ```

            **macOS (Intel)**:
            ```bash
            curl -L https://github.com/Xuzan9396/xz_mcp/releases/latest/download/xz_mcp_darwin_amd64 -o xz_mcp
            chmod +x xz_mcp
            mv xz_mcp ~/go/bin/
            ```

            **Linux (amd64)**:
            ```bash
            curl -L https://github.com/Xuzan9396/xz_mcp/releases/latest/download/xz_mcp_linux_amd64 -o xz_mcp
            chmod +x xz_mcp
            sudo mv xz_mcp /usr/local/bin/
            ```

            ### 🔧 配置

            **Codex** (`~/.codex/config.toml`):
            ```toml
            [mcp_servers.xz_mcp]
            command = "/Users/admin/go/bin/xz_mcp"
            ```

            **Claude Desktop**:
            ```bash
            claude mcp add-json xz_mcp -s user '{"type":"stdio","command":"/Users/admin/go/bin/xz_mcp","args":[],"env":{}}'
            ```

            ### 📦 集成的数据库
            - ✅ MySQL (14个工具)
            - ✅ PostgreSQL (3个工具)
            - ✅ Redis (17个工具)
            - ✅ SQLite (1个工具)

            ### 📖 完整文档
            查看 [README.md](https://github.com/Xuzan9396/xz_mcp/blob/main/README.md) 和 [DEPLOYMENT.md](https://github.com/Xuzan9396/xz_mcp/blob/main/DEPLOYMENT.md)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}